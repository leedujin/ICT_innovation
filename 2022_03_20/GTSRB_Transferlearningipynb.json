{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"GTSRB_Transferlearningipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"}},"cells":[{"cell_type":"code","metadata":{"id":"nWhPUUnPveS3","executionInfo":{"status":"ok","timestamp":1647740946832,"user_tz":-540,"elapsed":2367,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import tensorflow as tf\n","from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Dense, Dropout, Input\n","from tensorflow.keras.layers import Flatten, Conv2D, MaxPooling2D"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tF5KinX3zpAR"},"source":["# Google Drive 에서 데이터 파일 마운트 하려면 다음과 같이 하면되지만, 프로그래밍 편의를 위해 wget 으로 직접 다운로드 함\n","\n","from google.colab import drive   \n","\n","drive.mount('/content/gdrive/')  \n","\n","import shutil\n","\n","shutil.copy('/content/gdrive/My Drive/Colab Notebooks/dataset/GTSRB_Final_Training_Images.zip', '/content/')"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"esUP4a8Yq7h6","outputId":"01f5f1b0-12d0-48ee-b81f-01b7d0078872","executionInfo":{"status":"ok","timestamp":1647740964482,"user_tz":-540,"elapsed":11175,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["# 파일 다운로드\n","\n","!wget https://sid.erda.dk/public/archives/daaeac0d7ce1152aea9b61d9f1e19370/GTSRB_Final_Training_Images.zip"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-03-20 01:49:16--  https://sid.erda.dk/public/archives/daaeac0d7ce1152aea9b61d9f1e19370/GTSRB_Final_Training_Images.zip\n","Resolving sid.erda.dk (sid.erda.dk)... 130.225.104.13\n","Connecting to sid.erda.dk (sid.erda.dk)|130.225.104.13|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 276294756 (263M) [application/zip]\n","Saving to: ‘GTSRB_Final_Training_Images.zip’\n","\n","GTSRB_Final_Trainin 100%[===================>] 263.50M  29.1MB/s    in 9.9s    \n","\n","2022-03-20 01:49:26 (26.7 MB/s) - ‘GTSRB_Final_Training_Images.zip’ saved [276294756/276294756]\n","\n"]}]},{"cell_type":"code","metadata":{"id":"5iDRtTO7rpXp","executionInfo":{"status":"ok","timestamp":1647740964483,"user_tz":-540,"elapsed":7,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import os\n","import shutil\n","\n","if os.path.exists('/content/GTSRB/'):    # 작업 디렉토리는 GTSRB\n","    \n","    shutil.rmtree('/content/GTSRB/')\n","    print('/content/GTSRB/  is deleted !!!')"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"ajx57MQ3X6v1","executionInfo":{"status":"ok","timestamp":1647740972676,"user_tz":-540,"elapsed":8199,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["# 압축파일 풀기\n","\n","import zipfile\n","\n","with zipfile.ZipFile('/content/GTSRB_Final_Training_Images.zip', 'r') as target_file:\n","\n","    target_file.extractall('/content/GTSRB_Final_Training_Images/') "],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZqNacGsEYZq_"},"source":["# 압축을 풀어보면, 데이터 디렉토리 구조는 다음과 같음\n","\n","GTSRB_Final_Training_Images\n"," |- GTSRB\n","     |- Final_Training\n","         |- Images\n","             |- 00000\n","             |- 00001\n","             |- 00002\n","             |- .....\n","             |- 00042\n","\n","이러한 데릭토리 구조에서 딥러닝 학습을 위한 일반적인 디렉토리 구조로 변경할 계획임. 즉 train : test = 8: 2 비율로 나누어서 각각의 디렉토리에 저장하는 데이터 전처리 코드 필요함\n","\n","GTSRB\n"," |- train\n","     |- 00000\n","     |- 00001\n","     |- .....\n","     |- 00042\n"," |- test\n","     |- 00000\n","     |- 00001\n","     |- .....\n","     |- 00042"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hR1kZT1uaC5t","outputId":"d7f182db-b950-45a4-80d4-92746c7f2b31","executionInfo":{"status":"ok","timestamp":1647740976377,"user_tz":-540,"elapsed":528,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["# 데이터 전체 개수 확인\n","\n","import os\n","import glob\n","\n","# 데이터 정답 (label) 개수 및 종류 확인\n","\n","label_name_list = os.listdir('/content/GTSRB_Final_Training_Images/GTSRB/Final_Training/Images/')\n","\n","print('total label nums = ', len(label_name_list))\n","print('=================================================')\n","print(label_name_list)"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["total label nums =  43\n","=================================================\n","['00001', '00036', '00026', '00023', '00016', '00042', '00015', '00022', '00025', '00004', '00024', '00019', '00006', '00034', '00028', '00033', '00010', '00000', '00013', '00032', '00018', '00003', '00017', '00041', '00008', '00039', '00035', '00011', '00038', '00031', '00007', '00037', '00002', '00020', '00014', '00012', '00009', '00029', '00005', '00021', '00030', '00040', '00027']\n"]}]},{"cell_type":"markdown","metadata":{"id":"UJn1-6zhcbH9"},"source":["# 먼저 /content/GTSRB 생성"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lprX0QnjaC93","outputId":"1dce1f23-20e9-4acd-c1e5-3e245205912d","executionInfo":{"status":"ok","timestamp":1647741023673,"user_tz":-540,"elapsed":276,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import os\n","\n","# GTSTB 디렉토리 생성\n","\n","if not os.path.exists('/content/GTSRB/'):\n","\n","    os.mkdir('/content/GTSRB/')\n","    print('GTSRB dir is created !!')"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["GTSRB dir is created !!\n"]}]},{"cell_type":"markdown","metadata":{"id":"_mxHi_Pnd2MZ"},"source":["# shutil.copytree() 이용해서 이미지 데이터를 먼저 train 디렉토리로 복사함"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jQeGz_FDrvi7","outputId":"4984f29f-b2cb-41e6-d4c9-a4518606ec9b","executionInfo":{"status":"ok","timestamp":1647741037391,"user_tz":-540,"elapsed":5039,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import shutil\n","import os\n","import glob\n","from datetime import datetime\n","\n","src_root_dir = '/content/GTSRB_Final_Training_Images/GTSRB/Final_Training/Images/'\n","dst_root_dir = '/content/GTSRB/train/'\n","\n","if os.path.exists(dst_root_dir):\n","    shutil.rmtree(dst_root_dir)\n","    print(dst_root_dir + ' is deleted !!!')\n","\n","start_time = datetime.now()\n","\n","shutil.copytree(src_root_dir, dst_root_dir)\n","\n","end_time = datetime.now()\n","\n","print('[copytree] elapsed time => ', end_time-start_time)"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["[copytree] elapsed time =>  0:00:04.755231\n"]}]},{"cell_type":"markdown","metadata":{"id":"uFF2fZLXxgEh"},"source":["# /content/GTSRB/test/ 디렉토리 생성후에, train 디렉토리의 label 과 동일한 이름의 디렉토리를 test 하위디렉토리로 만든다"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z0AkbyCrxakM","outputId":"f072134d-4fa2-478b-f919-ac2fa0d85761","executionInfo":{"status":"ok","timestamp":1647741041902,"user_tz":-540,"elapsed":255,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import os\n","\n","label_name_list = os.listdir('/content/GTSRB/train/')\n","\n","print('train label count => ', len(label_name_list))\n","\n","if not os.path.exists('/content/GTSRB/test/'):\n","\n","    os.mkdir('/content/GTSRB/test/')\n","    print('/content/GTSRB/test dir is created !!')\n","\n","    count = 0\n","\n","    for label_name in label_name_list:\n","\n","        os.mkdir('/content/GTSRB/test/'+label_name.strip())\n","        print('/content/GTSRB/test/'+label_name.strip()+' is created')\n","\n","        count = count + 1\n","\n","    print('test label count => ', count)"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["train label count =>  43\n","/content/GTSRB/test dir is created !!\n","/content/GTSRB/test/00001 is created\n","/content/GTSRB/test/00036 is created\n","/content/GTSRB/test/00026 is created\n","/content/GTSRB/test/00023 is created\n","/content/GTSRB/test/00016 is created\n","/content/GTSRB/test/00042 is created\n","/content/GTSRB/test/00015 is created\n","/content/GTSRB/test/00022 is created\n","/content/GTSRB/test/00025 is created\n","/content/GTSRB/test/00004 is created\n","/content/GTSRB/test/00024 is created\n","/content/GTSRB/test/00019 is created\n","/content/GTSRB/test/00006 is created\n","/content/GTSRB/test/00034 is created\n","/content/GTSRB/test/00028 is created\n","/content/GTSRB/test/00033 is created\n","/content/GTSRB/test/00010 is created\n","/content/GTSRB/test/00000 is created\n","/content/GTSRB/test/00013 is created\n","/content/GTSRB/test/00032 is created\n","/content/GTSRB/test/00018 is created\n","/content/GTSRB/test/00003 is created\n","/content/GTSRB/test/00017 is created\n","/content/GTSRB/test/00041 is created\n","/content/GTSRB/test/00008 is created\n","/content/GTSRB/test/00039 is created\n","/content/GTSRB/test/00035 is created\n","/content/GTSRB/test/00011 is created\n","/content/GTSRB/test/00038 is created\n","/content/GTSRB/test/00031 is created\n","/content/GTSRB/test/00007 is created\n","/content/GTSRB/test/00037 is created\n","/content/GTSRB/test/00002 is created\n","/content/GTSRB/test/00020 is created\n","/content/GTSRB/test/00014 is created\n","/content/GTSRB/test/00012 is created\n","/content/GTSRB/test/00009 is created\n","/content/GTSRB/test/00029 is created\n","/content/GTSRB/test/00005 is created\n","/content/GTSRB/test/00021 is created\n","/content/GTSRB/test/00030 is created\n","/content/GTSRB/test/00040 is created\n","/content/GTSRB/test/00027 is created\n","test label count =>  43\n"]}]},{"cell_type":"markdown","metadata":{"id":"qKf-B7wpkTfN"},"source":["# train 데이터에서 test 데이터를 분리함. 분리비율 8 : 2"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8aWwfYeshlPx","outputId":"2a319a0b-8a72-460b-e113-157652c14a74","executionInfo":{"status":"ok","timestamp":1647741065255,"user_tz":-540,"elapsed":1324,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import os\n","import glob\n","import shutil\n","import random\n","\n","# 분리 비율\n","ratio = 0.2    # train : test = 8 : 2\n","\n","src_root_dir = '/content/GTSRB/train/'\n","dst_root_dir = '/content/GTSRB/test/'\n","\n","# 파일 move (train dir => test dir)\n","\n","label_name_list = os.listdir(src_root_dir)  # train dir 에서 label 이름 추출\n","\n","for label_name in label_name_list:\n","\n","    train_image_file_list = glob.glob(src_root_dir+label_name+'/*')\n","\n","    print('========================================================================')\n","    print('total [%s] image file nums => [%s]' % (label_name ,len(train_image_file_list)))\n","\n","    # data shuffle\n","    split_num = int(ratio*len(train_image_file_list))\n","\n","    print('split nums => ', split_num)\n","\n","    # extract test data from train data\n","    test_image_file_list = train_image_file_list[0:split_num]\n","\n","    move_nums = 0\n","\n","    for image_file in test_image_file_list:\n","\n","        shutil.move(image_file, dst_root_dir+label_name)    # move \n","\n","        move_nums = move_nums + 1\n","\n","    print('total move nums => ', move_nums)\n","    print('========================================================================')"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["========================================================================\n","total [00001] image file nums => [2221]\n","split nums =>  444\n","total move nums =>  444\n","========================================================================\n","========================================================================\n","total [00036] image file nums => [391]\n","split nums =>  78\n","total move nums =>  78\n","========================================================================\n","========================================================================\n","total [00026] image file nums => [601]\n","split nums =>  120\n","total move nums =>  120\n","========================================================================\n","========================================================================\n","total [00023] image file nums => [511]\n","split nums =>  102\n","total move nums =>  102\n","========================================================================\n","========================================================================\n","total [00016] image file nums => [421]\n","split nums =>  84\n","total move nums =>  84\n","========================================================================\n","========================================================================\n","total [00042] image file nums => [241]\n","split nums =>  48\n","total move nums =>  48\n","========================================================================\n","========================================================================\n","total [00015] image file nums => [631]\n","split nums =>  126\n","total move nums =>  126\n","========================================================================\n","========================================================================\n","total [00022] image file nums => [391]\n","split nums =>  78\n","total move nums =>  78\n","========================================================================\n","========================================================================\n","total [00025] image file nums => [1501]\n","split nums =>  300\n","total move nums =>  300\n","========================================================================\n","========================================================================\n","total [00004] image file nums => [1981]\n","split nums =>  396\n","total move nums =>  396\n","========================================================================\n","========================================================================\n","total [00024] image file nums => [271]\n","split nums =>  54\n","total move nums =>  54\n","========================================================================\n","========================================================================\n","total [00019] image file nums => [211]\n","split nums =>  42\n","total move nums =>  42\n","========================================================================\n","========================================================================\n","total [00006] image file nums => [421]\n","split nums =>  84\n","total move nums =>  84\n","========================================================================\n","========================================================================\n","total [00034] image file nums => [421]\n","split nums =>  84\n","total move nums =>  84\n","========================================================================\n","========================================================================\n","total [00028] image file nums => [541]\n","split nums =>  108\n","total move nums =>  108\n","========================================================================\n","========================================================================\n","total [00033] image file nums => [690]\n","split nums =>  138\n","total move nums =>  138\n","========================================================================\n","========================================================================\n","total [00010] image file nums => [2011]\n","split nums =>  402\n","total move nums =>  402\n","========================================================================\n","========================================================================\n","total [00000] image file nums => [211]\n","split nums =>  42\n","total move nums =>  42\n","========================================================================\n","========================================================================\n","total [00013] image file nums => [2161]\n","split nums =>  432\n","total move nums =>  432\n","========================================================================\n","========================================================================\n","total [00032] image file nums => [241]\n","split nums =>  48\n","total move nums =>  48\n","========================================================================\n","========================================================================\n","total [00018] image file nums => [1201]\n","split nums =>  240\n","total move nums =>  240\n","========================================================================\n","========================================================================\n","total [00003] image file nums => [1411]\n","split nums =>  282\n","total move nums =>  282\n","========================================================================\n","========================================================================\n","total [00017] image file nums => [1111]\n","split nums =>  222\n","total move nums =>  222\n","========================================================================\n","========================================================================\n","total [00041] image file nums => [241]\n","split nums =>  48\n","total move nums =>  48\n","========================================================================\n","========================================================================\n","total [00008] image file nums => [1411]\n","split nums =>  282\n","total move nums =>  282\n","========================================================================\n","========================================================================\n","total [00039] image file nums => [301]\n","split nums =>  60\n","total move nums =>  60\n","========================================================================\n","========================================================================\n","total [00035] image file nums => [1201]\n","split nums =>  240\n","total move nums =>  240\n","========================================================================\n","========================================================================\n","total [00011] image file nums => [1321]\n","split nums =>  264\n","total move nums =>  264\n","========================================================================\n","========================================================================\n","total [00038] image file nums => [2071]\n","split nums =>  414\n","total move nums =>  414\n","========================================================================\n","========================================================================\n","total [00031] image file nums => [781]\n","split nums =>  156\n","total move nums =>  156\n","========================================================================\n","========================================================================\n","total [00007] image file nums => [1441]\n","split nums =>  288\n","total move nums =>  288\n","========================================================================\n","========================================================================\n","total [00037] image file nums => [211]\n","split nums =>  42\n","total move nums =>  42\n","========================================================================\n","========================================================================\n","total [00002] image file nums => [2251]\n","split nums =>  450\n","total move nums =>  450\n","========================================================================\n","========================================================================\n","total [00020] image file nums => [361]\n","split nums =>  72\n","total move nums =>  72\n","========================================================================\n","========================================================================\n","total [00014] image file nums => [781]\n","split nums =>  156\n","total move nums =>  156\n","========================================================================\n","========================================================================\n","total [00012] image file nums => [2101]\n","split nums =>  420\n","total move nums =>  420\n","========================================================================\n","========================================================================\n","total [00009] image file nums => [1471]\n","split nums =>  294\n","total move nums =>  294\n","========================================================================\n","========================================================================\n","total [00029] image file nums => [271]\n","split nums =>  54\n","total move nums =>  54\n","========================================================================\n","========================================================================\n","total [00005] image file nums => [1861]\n","split nums =>  372\n","total move nums =>  372\n","========================================================================\n","========================================================================\n","total [00021] image file nums => [331]\n","split nums =>  66\n","total move nums =>  66\n","========================================================================\n","========================================================================\n","total [00030] image file nums => [451]\n","split nums =>  90\n","total move nums =>  90\n","========================================================================\n","========================================================================\n","total [00040] image file nums => [361]\n","split nums =>  72\n","total move nums =>  72\n","========================================================================\n","========================================================================\n","total [00027] image file nums => [241]\n","split nums =>  48\n","total move nums =>  48\n","========================================================================\n"]}]},{"cell_type":"markdown","metadata":{"id":"c8YpgHKtyraR"},"source":["# train : test 데이터 비율 확인 (검증)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U8bswoIYmUiL","outputId":"dbbab1d8-6210-49f5-8850-bf92f1fffeda","executionInfo":{"status":"ok","timestamp":1647741067089,"user_tz":-540,"elapsed":262,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["src_root_dir = '/content/GTSRB/train/'\n","dst_root_dir = '/content/GTSRB/test/'\n","\n","train_label_name_list = os.listdir(src_root_dir)\n","test_label_name_list = os.listdir(src_root_dir)\n","\n","train_label_name_list.sort()\n","test_label_name_list.sort()\n","\n","if train_label_name_list != test_label_name_list:\n","    print('fatal error !!!!')\n","else:\n","    print(len(train_label_name_list), len(test_label_name_list))\n","\n","# 데이터 개수 확인\n","\n","for label_name in train_label_name_list:\n","\n","    train_data_nums = len(os.listdir(src_root_dir+label_name))\n","    test_data_nums = len(os.listdir(dst_root_dir+label_name))\n","\n","    print('train => ', label_name, train_data_nums, ' , test => ', label_name, test_data_nums)\n","    print('=======================================================')"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["43 43\n","train =>  00000 169  , test =>  00000 42\n","=======================================================\n","train =>  00001 1777  , test =>  00001 444\n","=======================================================\n","train =>  00002 1801  , test =>  00002 450\n","=======================================================\n","train =>  00003 1129  , test =>  00003 282\n","=======================================================\n","train =>  00004 1585  , test =>  00004 396\n","=======================================================\n","train =>  00005 1489  , test =>  00005 372\n","=======================================================\n","train =>  00006 337  , test =>  00006 84\n","=======================================================\n","train =>  00007 1153  , test =>  00007 288\n","=======================================================\n","train =>  00008 1129  , test =>  00008 282\n","=======================================================\n","train =>  00009 1177  , test =>  00009 294\n","=======================================================\n","train =>  00010 1609  , test =>  00010 402\n","=======================================================\n","train =>  00011 1057  , test =>  00011 264\n","=======================================================\n","train =>  00012 1681  , test =>  00012 420\n","=======================================================\n","train =>  00013 1729  , test =>  00013 432\n","=======================================================\n","train =>  00014 625  , test =>  00014 156\n","=======================================================\n","train =>  00015 505  , test =>  00015 126\n","=======================================================\n","train =>  00016 337  , test =>  00016 84\n","=======================================================\n","train =>  00017 889  , test =>  00017 222\n","=======================================================\n","train =>  00018 961  , test =>  00018 240\n","=======================================================\n","train =>  00019 169  , test =>  00019 42\n","=======================================================\n","train =>  00020 289  , test =>  00020 72\n","=======================================================\n","train =>  00021 265  , test =>  00021 66\n","=======================================================\n","train =>  00022 313  , test =>  00022 78\n","=======================================================\n","train =>  00023 409  , test =>  00023 102\n","=======================================================\n","train =>  00024 217  , test =>  00024 54\n","=======================================================\n","train =>  00025 1201  , test =>  00025 300\n","=======================================================\n","train =>  00026 481  , test =>  00026 120\n","=======================================================\n","train =>  00027 193  , test =>  00027 48\n","=======================================================\n","train =>  00028 433  , test =>  00028 108\n","=======================================================\n","train =>  00029 217  , test =>  00029 54\n","=======================================================\n","train =>  00030 361  , test =>  00030 90\n","=======================================================\n","train =>  00031 625  , test =>  00031 156\n","=======================================================\n","train =>  00032 193  , test =>  00032 48\n","=======================================================\n","train =>  00033 552  , test =>  00033 138\n","=======================================================\n","train =>  00034 337  , test =>  00034 84\n","=======================================================\n","train =>  00035 961  , test =>  00035 240\n","=======================================================\n","train =>  00036 313  , test =>  00036 78\n","=======================================================\n","train =>  00037 169  , test =>  00037 42\n","=======================================================\n","train =>  00038 1657  , test =>  00038 414\n","=======================================================\n","train =>  00039 241  , test =>  00039 60\n","=======================================================\n","train =>  00040 289  , test =>  00040 72\n","=======================================================\n","train =>  00041 193  , test =>  00041 48\n","=======================================================\n","train =>  00042 193  , test =>  00042 48\n","=======================================================\n"]}]},{"cell_type":"markdown","metadata":{"id":"HnH8tDL502Ih"},"source":["# train image 읽어서 x_train numpy 생성 \n","# train label 읽어서 y_train numpy 생성"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LbMVr2OC1HIS","outputId":"c15dd242-bb70-49a1-fef9-6830c28bbedc","executionInfo":{"status":"ok","timestamp":1647741102131,"user_tz":-540,"elapsed":1752,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import os\n","import cv2\n","import glob\n","import numpy as np\n","\n","image_list = []\n","label_list = []\n","\n","train_base_dir = '/content/GTSRB/train/'\n","\n","train_label_list = os.listdir(train_base_dir)    # 정답이름\n","\n","print('label nums => ', len(train_label_list))\n","\n","for train_label_name in train_label_list:\n","\n","    # 이미지 파일 읽어오기\n","\n","    file_path = train_base_dir + train_label_name\n","\n","    train_img_file_list = glob.glob(file_path+'/*.ppm')\n","\n","    # 각각의 정답 디렉토리에 있는 이미지 파일, 즉 .ppm 파일 읽어서 리스트에 저장\n","    \n","    for train_img_file in train_img_file_list:\n","\n","        train_img = cv2.imread(train_img_file, cv2.IMREAD_COLOR) \n","        \n","        #print(train_img.shape)\n","\n","        train_img = cv2.resize(train_img, dsize=(32,32))\n","\n","        train_img = cv2.cvtColor(train_img, cv2.COLOR_BGR2RGB)\n","\n","        image_list.append(train_img)\n","        label_list.append(float(train_label_name))  # 정답은 문자열을 실수로 변환"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["label nums =>  43\n"]}]},{"cell_type":"markdown","metadata":{"id":"wCmXzmRgy8iM"},"source":["# (x_train, y_train) numpy 생성"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e7hPD4O4y-BT","outputId":"1f89f45a-a99f-4ae6-bfb6-f8ccab96a6dc","executionInfo":{"status":"ok","timestamp":1647741108710,"user_tz":-540,"elapsed":295,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["x_train = np.array(image_list).astype('float32')\n","y_train = np.array(label_list).astype('float32')\n","\n","print('x_train.shape = ', x_train.shape, ', y_train.shape = ', y_train.shape)"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train.shape =  (31376, 32, 32, 3) , y_train.shape =  (31376,)\n"]}]},{"cell_type":"markdown","metadata":{"id":"02tAARNM9wKK"},"source":["# test image 읽어서 x_test numpy 생성 \n","# test label 읽어서 y_test numpy 생성"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4nv4QxmrsmPJ","outputId":"6078f021-391f-4f13-c7cb-8eeb3b929062","executionInfo":{"status":"ok","timestamp":1647741113332,"user_tz":-540,"elapsed":648,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import os\n","import cv2\n","import glob\n","import numpy as np\n","\n","image_list = []\n","label_list = []\n","\n","test_base_dir = '/content/GTSRB/test/'\n","\n","test_label_list = os.listdir(test_base_dir)    # 정답이름\n","\n","print('label nums => ', len(test_label_list))\n","\n","for test_label_name in test_label_list:\n","\n","    # 이미지 파일 읽어오기\n","\n","    file_path = test_base_dir + test_label_name\n","\n","    test_img_file_list = glob.glob(file_path+'/*.ppm')\n","\n","    # 각각의 정답 디렉토리에 있는 이미지 파일, 즉 .ppm 파일 읽어서 리스트에 저장\n","    \n","    for test_img_file in test_img_file_list:\n","\n","        test_img = cv2.imread(test_img_file, cv2.IMREAD_COLOR) \n","        \n","        #print(test_img.shape)\n","\n","        test_img = cv2.resize(test_img, dsize=(32,32))\n","\n","        test_img = cv2.cvtColor(test_img, cv2.COLOR_BGR2RGB)\n","\n","        image_list.append(test_img)\n","        label_list.append(float(test_label_name))  # 정답은 문자열을 실수로 변환"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["label nums =>  43\n"]}]},{"cell_type":"markdown","metadata":{"id":"TKAstOnEziyI"},"source":["# (x_test, y_test) numpy 생성"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kMd420QIznYG","outputId":"09aaca3c-09c9-402b-f4c9-3ac43f670fad","executionInfo":{"status":"ok","timestamp":1647741117527,"user_tz":-540,"elapsed":256,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["x_test = np.array(image_list).astype('float32')\n","y_test = np.array(label_list).astype('float32')\n","\n","print('x_test.shape = ', x_test.shape, ', y_test.shape = ', y_test.shape)"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["x_test.shape =  (7833, 32, 32, 3) , y_test.shape =  (7833,)\n"]}]},{"cell_type":"markdown","metadata":{"id":"joPzIIyS-hjs"},"source":["# x_train, x_test, y_train, y_test shape 확인"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K8GzBgcm-dOP","outputId":"85a466a4-ea10-46cc-a998-989c365e14eb","executionInfo":{"status":"ok","timestamp":1647741122583,"user_tz":-540,"elapsed":253,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["print('x_train.shape = ', x_train.shape, ', y_train.shape = ', y_train.shape)\n","print('x_test.shape = ', x_test.shape, ', y_test.shape = ', y_test.shape)"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train.shape =  (31376, 32, 32, 3) , y_train.shape =  (31376,)\n","x_test.shape =  (7833, 32, 32, 3) , y_test.shape =  (7833,)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-IRt41UZ-8Em","outputId":"7a66bf30-4438-4c47-c16c-8d31a11b4bb7","executionInfo":{"status":"ok","timestamp":1647741123617,"user_tz":-540,"elapsed":4,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["print(y_train[:3])\n","print(y_test[:3])"],"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[1. 1. 1.]\n","[1. 1. 1.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"ajW_TMZf_Pc2"},"source":["# 데이터 정규화"]},{"cell_type":"code","metadata":{"id":"Q4Xh-9FkvsKE","executionInfo":{"status":"ok","timestamp":1647741126771,"user_tz":-540,"elapsed":308,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["x_train = x_train.astype(np.float32) / 255.0\n","x_test = x_test.astype(np.float32) / 255.0\n","\n","# one-hot encoding 하기 위해서는, 정답에 대해서 다음과 같이 실행함\n","\n","#y_train = tf.keras.utils.to_categorical(y_train, num_classes=n_classes)\n","#y_test = tf.keras.utils.to_categorical(y_test, num_classes=n_classes)"],"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wusn5G5WAchl"},"source":["# 이미지 출력"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"id":"kXNWhNxgAbZv","outputId":"ede2364f-23ec-4f6b-f884-66cc0c2b2281","executionInfo":{"status":"ok","timestamp":1647741132372,"user_tz":-540,"elapsed":1790,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import matplotlib.pyplot as plt\n","\n","random_index = np.random.randint(0, len(x_train), 16)    # 16개 랜덤 train 데이터 추출 \n","\n","plt.figure(figsize=(8,8))\n","\n","for pos in range(len(random_index)):\n","\n","    plt.subplot(4,4,pos+1)\n","    plt.axis('off')\n","    train_img_index = random_index[pos]\n","    plt.imshow(x_train[train_img_index])\n","\n","plt.tight_layout()\n","plt.show()"],"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 16 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"YOscWaGQ_Ttt"},"source":["Sequential 모델 구축"]},{"cell_type":"code","source":["from tensorflow.keras.applications import MobileNet"],"metadata":{"id":"RyickUbgBnZt","executionInfo":{"status":"ok","timestamp":1647741186178,"user_tz":-540,"elapsed":260,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["base_model = MobileNet(weights = 'imagenet', include_top = False, input_shape = (32, 32, 3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Drsc1aXxBzc6","executionInfo":{"status":"ok","timestamp":1647741915457,"user_tz":-540,"elapsed":988,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}},"outputId":"10a63b61-6c04-43ad-fd66-e13a1ef102c9"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["WARNING:tensorflow:`input_shape` is undefined or non-square, or `rows` is not in [128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.\n"]}]},{"cell_type":"code","source":["base_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OBjt_cyRB8Bk","executionInfo":{"status":"ok","timestamp":1647741915889,"user_tz":-540,"elapsed":459,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}},"outputId":"f4333d12-7ebd-47fb-c1e8-8b5d731d65a5"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"mobilenet_1.00_224\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_2 (InputLayer)        [(None, 32, 32, 3)]       0         \n","                                                                 \n"," conv1 (Conv2D)              (None, 16, 16, 32)        864       \n","                                                                 \n"," conv1_bn (BatchNormalizatio  (None, 16, 16, 32)       128       \n"," n)                                                              \n","                                                                 \n"," conv1_relu (ReLU)           (None, 16, 16, 32)        0         \n","                                                                 \n"," conv_dw_1 (DepthwiseConv2D)  (None, 16, 16, 32)       288       \n","                                                                 \n"," conv_dw_1_bn (BatchNormaliz  (None, 16, 16, 32)       128       \n"," ation)                                                          \n","                                                                 \n"," conv_dw_1_relu (ReLU)       (None, 16, 16, 32)        0         \n","                                                                 \n"," conv_pw_1 (Conv2D)          (None, 16, 16, 64)        2048      \n","                                                                 \n"," conv_pw_1_bn (BatchNormaliz  (None, 16, 16, 64)       256       \n"," ation)                                                          \n","                                                                 \n"," conv_pw_1_relu (ReLU)       (None, 16, 16, 64)        0         \n","                                                                 \n"," conv_pad_2 (ZeroPadding2D)  (None, 17, 17, 64)        0         \n","                                                                 \n"," conv_dw_2 (DepthwiseConv2D)  (None, 8, 8, 64)         576       \n","                                                                 \n"," conv_dw_2_bn (BatchNormaliz  (None, 8, 8, 64)         256       \n"," ation)                                                          \n","                                                                 \n"," conv_dw_2_relu (ReLU)       (None, 8, 8, 64)          0         \n","                                                                 \n"," conv_pw_2 (Conv2D)          (None, 8, 8, 128)         8192      \n","                                                                 \n"," conv_pw_2_bn (BatchNormaliz  (None, 8, 8, 128)        512       \n"," ation)                                                          \n","                                                                 \n"," conv_pw_2_relu (ReLU)       (None, 8, 8, 128)         0         \n","                                                                 \n"," conv_dw_3 (DepthwiseConv2D)  (None, 8, 8, 128)        1152      \n","                                                                 \n"," conv_dw_3_bn (BatchNormaliz  (None, 8, 8, 128)        512       \n"," ation)                                                          \n","                                                                 \n"," conv_dw_3_relu (ReLU)       (None, 8, 8, 128)         0         \n","                                                                 \n"," conv_pw_3 (Conv2D)          (None, 8, 8, 128)         16384     \n","                                                                 \n"," conv_pw_3_bn (BatchNormaliz  (None, 8, 8, 128)        512       \n"," ation)                                                          \n","                                                                 \n"," conv_pw_3_relu (ReLU)       (None, 8, 8, 128)         0         \n","                                                                 \n"," conv_pad_4 (ZeroPadding2D)  (None, 9, 9, 128)         0         \n","                                                                 \n"," conv_dw_4 (DepthwiseConv2D)  (None, 4, 4, 128)        1152      \n","                                                                 \n"," conv_dw_4_bn (BatchNormaliz  (None, 4, 4, 128)        512       \n"," ation)                                                          \n","                                                                 \n"," conv_dw_4_relu (ReLU)       (None, 4, 4, 128)         0         \n","                                                                 \n"," conv_pw_4 (Conv2D)          (None, 4, 4, 256)         32768     \n","                                                                 \n"," conv_pw_4_bn (BatchNormaliz  (None, 4, 4, 256)        1024      \n"," ation)                                                          \n","                                                                 \n"," conv_pw_4_relu (ReLU)       (None, 4, 4, 256)         0         \n","                                                                 \n"," conv_dw_5 (DepthwiseConv2D)  (None, 4, 4, 256)        2304      \n","                                                                 \n"," conv_dw_5_bn (BatchNormaliz  (None, 4, 4, 256)        1024      \n"," ation)                                                          \n","                                                                 \n"," conv_dw_5_relu (ReLU)       (None, 4, 4, 256)         0         \n","                                                                 \n"," conv_pw_5 (Conv2D)          (None, 4, 4, 256)         65536     \n","                                                                 \n"," conv_pw_5_bn (BatchNormaliz  (None, 4, 4, 256)        1024      \n"," ation)                                                          \n","                                                                 \n"," conv_pw_5_relu (ReLU)       (None, 4, 4, 256)         0         \n","                                                                 \n"," conv_pad_6 (ZeroPadding2D)  (None, 5, 5, 256)         0         \n","                                                                 \n"," conv_dw_6 (DepthwiseConv2D)  (None, 2, 2, 256)        2304      \n","                                                                 \n"," conv_dw_6_bn (BatchNormaliz  (None, 2, 2, 256)        1024      \n"," ation)                                                          \n","                                                                 \n"," conv_dw_6_relu (ReLU)       (None, 2, 2, 256)         0         \n","                                                                 \n"," conv_pw_6 (Conv2D)          (None, 2, 2, 512)         131072    \n","                                                                 \n"," conv_pw_6_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_pw_6_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_dw_7 (DepthwiseConv2D)  (None, 2, 2, 512)        4608      \n","                                                                 \n"," conv_dw_7_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_dw_7_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_pw_7 (Conv2D)          (None, 2, 2, 512)         262144    \n","                                                                 \n"," conv_pw_7_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_pw_7_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_dw_8 (DepthwiseConv2D)  (None, 2, 2, 512)        4608      \n","                                                                 \n"," conv_dw_8_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_dw_8_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_pw_8 (Conv2D)          (None, 2, 2, 512)         262144    \n","                                                                 \n"," conv_pw_8_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_pw_8_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_dw_9 (DepthwiseConv2D)  (None, 2, 2, 512)        4608      \n","                                                                 \n"," conv_dw_9_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_dw_9_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_pw_9 (Conv2D)          (None, 2, 2, 512)         262144    \n","                                                                 \n"," conv_pw_9_bn (BatchNormaliz  (None, 2, 2, 512)        2048      \n"," ation)                                                          \n","                                                                 \n"," conv_pw_9_relu (ReLU)       (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_dw_10 (DepthwiseConv2D  (None, 2, 2, 512)        4608      \n"," )                                                               \n","                                                                 \n"," conv_dw_10_bn (BatchNormali  (None, 2, 2, 512)        2048      \n"," zation)                                                         \n","                                                                 \n"," conv_dw_10_relu (ReLU)      (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_pw_10 (Conv2D)         (None, 2, 2, 512)         262144    \n","                                                                 \n"," conv_pw_10_bn (BatchNormali  (None, 2, 2, 512)        2048      \n"," zation)                                                         \n","                                                                 \n"," conv_pw_10_relu (ReLU)      (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_dw_11 (DepthwiseConv2D  (None, 2, 2, 512)        4608      \n"," )                                                               \n","                                                                 \n"," conv_dw_11_bn (BatchNormali  (None, 2, 2, 512)        2048      \n"," zation)                                                         \n","                                                                 \n"," conv_dw_11_relu (ReLU)      (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_pw_11 (Conv2D)         (None, 2, 2, 512)         262144    \n","                                                                 \n"," conv_pw_11_bn (BatchNormali  (None, 2, 2, 512)        2048      \n"," zation)                                                         \n","                                                                 \n"," conv_pw_11_relu (ReLU)      (None, 2, 2, 512)         0         \n","                                                                 \n"," conv_pad_12 (ZeroPadding2D)  (None, 3, 3, 512)        0         \n","                                                                 \n"," conv_dw_12 (DepthwiseConv2D  (None, 1, 1, 512)        4608      \n"," )                                                               \n","                                                                 \n"," conv_dw_12_bn (BatchNormali  (None, 1, 1, 512)        2048      \n"," zation)                                                         \n","                                                                 \n"," conv_dw_12_relu (ReLU)      (None, 1, 1, 512)         0         \n","                                                                 \n"," conv_pw_12 (Conv2D)         (None, 1, 1, 1024)        524288    \n","                                                                 \n"," conv_pw_12_bn (BatchNormali  (None, 1, 1, 1024)       4096      \n"," zation)                                                         \n","                                                                 \n"," conv_pw_12_relu (ReLU)      (None, 1, 1, 1024)        0         \n","                                                                 \n"," conv_dw_13 (DepthwiseConv2D  (None, 1, 1, 1024)       9216      \n"," )                                                               \n","                                                                 \n"," conv_dw_13_bn (BatchNormali  (None, 1, 1, 1024)       4096      \n"," zation)                                                         \n","                                                                 \n"," conv_dw_13_relu (ReLU)      (None, 1, 1, 1024)        0         \n","                                                                 \n"," conv_pw_13 (Conv2D)         (None, 1, 1, 1024)        1048576   \n","                                                                 \n"," conv_pw_13_bn (BatchNormali  (None, 1, 1, 1024)       4096      \n"," zation)                                                         \n","                                                                 \n"," conv_pw_13_relu (ReLU)      (None, 1, 1, 1024)        0         \n","                                                                 \n","=================================================================\n","Total params: 3,228,864\n","Trainable params: 3,206,976\n","Non-trainable params: 21,888\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ISOTB0okwnAc","outputId":"dd220d6b-8102-403a-c6b8-e2b6e7e15e71","executionInfo":{"status":"ok","timestamp":1647742522429,"user_tz":-540,"elapsed":724,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["n_classes = len(os.listdir('/content/GTSRB/train/'))  # 정답 개수\n","\n","model = Sequential()\n","\n","model.add(base_model)\n","\n","model.add(Flatten())\n","\n","model.add(Dense(128, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(n_classes, activation='softmax'))\n","\n","model.summary()"],"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," mobilenet_1.00_224 (Functio  (None, 1, 1, 1024)       3228864   \n"," nal)                                                            \n","                                                                 \n"," flatten_4 (Flatten)         (None, 1024)              0         \n","                                                                 \n"," dense_8 (Dense)             (None, 128)               131200    \n","                                                                 \n"," dropout_4 (Dropout)         (None, 128)               0         \n","                                                                 \n"," dense_9 (Dense)             (None, 43)                5547      \n","                                                                 \n","=================================================================\n","Total params: 3,365,611\n","Trainable params: 3,343,723\n","Non-trainable params: 21,888\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"ndPGvLsXx0XF","executionInfo":{"status":"ok","timestamp":1647742540792,"user_tz":-540,"elapsed":256,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["model.compile(loss='sparse_categorical_crossentropy', \n","              optimizer = tf.keras.optimizers.Adam(1e-2), metrics=['accuracy'])"],"execution_count":59,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rsq5HiT5yEA_","outputId":"e2db711f-e0d9-4366-bcd5-ef31ee6cbdd6","executionInfo":{"status":"ok","timestamp":1647742743035,"user_tz":-540,"elapsed":200894,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["from tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping\n","from datetime import datetime\n","\n","save_file_name = './GTSRB_Native_Colab.h5'\n","\n","checkpoint = ModelCheckpoint(save_file_name,       # file명을 지정\n","                             monitor='val_loss',   # val_loss 값이 개선되었을때 호출\n","                             verbose=1,            # 로그를 출력\n","                             save_best_only=True,  # 가장 best 값만 저장\n","                             mode='auto'           \n","                            )\n","\n","earlystopping = EarlyStopping(monitor='val_loss', # 모니터 기준 설정 (val loss) \n","                              patience=5,         # 5회 Epoch동안 개선되지 않는다면 종료\n","                             )\n","\n","start_time = datetime.now()\n","\n","hist = model.fit(x_train, y_train, \n","               batch_size=32, epochs=30, \n","               validation_data=(x_test, y_test),\n","               callbacks=[checkpoint, earlystopping])\n","\n","end_time = datetime.now()\n","\n","print('elapsed time => ', end_time-start_time)"],"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","978/981 [============================>.] - ETA: 0s - loss: 3.1954 - accuracy: 0.1242\n","Epoch 1: val_loss improved from inf to 4.35300, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 14s 12ms/step - loss: 3.1951 - accuracy: 0.1243 - val_loss: 4.3530 - val_accuracy: 0.0400\n","Epoch 2/30\n","981/981 [==============================] - ETA: 0s - loss: 2.8386 - accuracy: 0.1681\n","Epoch 2: val_loss improved from 4.35300 to 2.87163, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 2.8386 - accuracy: 0.1681 - val_loss: 2.8716 - val_accuracy: 0.1901\n","Epoch 3/30\n","979/981 [============================>.] - ETA: 0s - loss: 2.6295 - accuracy: 0.2148\n","Epoch 3: val_loss did not improve from 2.87163\n","981/981 [==============================] - 11s 12ms/step - loss: 2.6294 - accuracy: 0.2147 - val_loss: 2.8901 - val_accuracy: 0.1850\n","Epoch 4/30\n","980/981 [============================>.] - ETA: 0s - loss: 2.6861 - accuracy: 0.2024\n","Epoch 4: val_loss improved from 2.87163 to 2.59641, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 2.6860 - accuracy: 0.2025 - val_loss: 2.5964 - val_accuracy: 0.1873\n","Epoch 5/30\n","980/981 [============================>.] - ETA: 0s - loss: 2.3156 - accuracy: 0.2606\n","Epoch 5: val_loss did not improve from 2.59641\n","981/981 [==============================] - 12s 12ms/step - loss: 2.3162 - accuracy: 0.2605 - val_loss: 3.0593 - val_accuracy: 0.2322\n","Epoch 6/30\n","981/981 [==============================] - ETA: 0s - loss: 2.3958 - accuracy: 0.2527\n","Epoch 6: val_loss improved from 2.59641 to 2.10585, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 2.3958 - accuracy: 0.2527 - val_loss: 2.1058 - val_accuracy: 0.3037\n","Epoch 7/30\n","978/981 [============================>.] - ETA: 0s - loss: 2.0328 - accuracy: 0.3034\n","Epoch 7: val_loss improved from 2.10585 to 2.09853, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 2.0325 - accuracy: 0.3034 - val_loss: 2.0985 - val_accuracy: 0.3017\n","Epoch 8/30\n","980/981 [============================>.] - ETA: 0s - loss: 2.0276 - accuracy: 0.3031\n","Epoch 8: val_loss did not improve from 2.09853\n","981/981 [==============================] - 11s 12ms/step - loss: 2.0277 - accuracy: 0.3031 - val_loss: 2.1053 - val_accuracy: 0.2931\n","Epoch 9/30\n","980/981 [============================>.] - ETA: 0s - loss: 2.0742 - accuracy: 0.2981\n","Epoch 9: val_loss improved from 2.09853 to 1.94752, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 11s 12ms/step - loss: 2.0744 - accuracy: 0.2981 - val_loss: 1.9475 - val_accuracy: 0.3231\n","Epoch 10/30\n","979/981 [============================>.] - ETA: 0s - loss: 1.9987 - accuracy: 0.3140\n","Epoch 10: val_loss improved from 1.94752 to 1.83725, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 1.9984 - accuracy: 0.3141 - val_loss: 1.8372 - val_accuracy: 0.3466\n","Epoch 11/30\n","979/981 [============================>.] - ETA: 0s - loss: 1.8651 - accuracy: 0.3456\n","Epoch 11: val_loss improved from 1.83725 to 1.74090, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 1.8653 - accuracy: 0.3456 - val_loss: 1.7409 - val_accuracy: 0.3742\n","Epoch 12/30\n","977/981 [============================>.] - ETA: 0s - loss: 1.8551 - accuracy: 0.3580\n","Epoch 12: val_loss improved from 1.74090 to 1.65244, saving model to ./GTSRB_Native_Colab.h5\n","981/981 [==============================] - 12s 12ms/step - loss: 1.8556 - accuracy: 0.3579 - val_loss: 1.6524 - val_accuracy: 0.3964\n","Epoch 13/30\n","979/981 [============================>.] - ETA: 0s - loss: 1.8681 - accuracy: 0.3687\n","Epoch 13: val_loss did not improve from 1.65244\n","981/981 [==============================] - 12s 12ms/step - loss: 1.8679 - accuracy: 0.3687 - val_loss: 1.6838 - val_accuracy: 0.3974\n","Epoch 14/30\n","981/981 [==============================] - ETA: 0s - loss: 1.7184 - accuracy: 0.4030\n","Epoch 14: val_loss did not improve from 1.65244\n","981/981 [==============================] - 11s 12ms/step - loss: 1.7184 - accuracy: 0.4030 - val_loss: 11.6963 - val_accuracy: 0.2106\n","Epoch 15/30\n","977/981 [============================>.] - ETA: 0s - loss: 2.3202 - accuracy: 0.2931\n","Epoch 15: val_loss did not improve from 1.65244\n","981/981 [==============================] - 12s 12ms/step - loss: 2.3198 - accuracy: 0.2930 - val_loss: 3.5921 - val_accuracy: 0.2303\n","Epoch 16/30\n","979/981 [============================>.] - ETA: 0s - loss: 1.9364 - accuracy: 0.3433\n","Epoch 16: val_loss did not improve from 1.65244\n","981/981 [==============================] - 12s 12ms/step - loss: 1.9361 - accuracy: 0.3434 - val_loss: 1.6761 - val_accuracy: 0.4106\n","Epoch 17/30\n","980/981 [============================>.] - ETA: 0s - loss: 1.7368 - accuracy: 0.4001\n","Epoch 17: val_loss did not improve from 1.65244\n","981/981 [==============================] - 11s 11ms/step - loss: 1.7366 - accuracy: 0.4002 - val_loss: 1.7028 - val_accuracy: 0.4139\n","elapsed time =>  0:03:20.532987\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TNQbhxp_yOU4","outputId":"65cadec7-7189-4417-d5ee-03ce0a2becdb","executionInfo":{"status":"ok","timestamp":1647742744252,"user_tz":-540,"elapsed":1222,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["model.evaluate(x_test, y_test)"],"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["245/245 [==============================] - 1s 5ms/step - loss: 1.7028 - accuracy: 0.4139\n"]},{"output_type":"execute_result","data":{"text/plain":["[1.7027751207351685, 0.41388994455337524]"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"z7hIF36fyR6O","outputId":"f2fc8170-8503-4b05-97c6-6a314d0c856a","executionInfo":{"status":"ok","timestamp":1647742744868,"user_tz":-540,"elapsed":617,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["import matplotlib.pyplot as plt\n","\n","plt.plot(hist.history['accuracy'], label='train')\n","plt.plot(hist.history['val_accuracy'], label='validation')\n","plt.title('Accuracy Trend')\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.legend(loc='best')\n","plt.grid()\n","plt.show()"],"execution_count":62,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"ikuZTLbMybAQ","outputId":"33d63082-6310-4a9e-c40e-9d08d76490fb","executionInfo":{"status":"ok","timestamp":1647742744869,"user_tz":-540,"elapsed":9,"user":{"displayName":"‍이두진[학생](공과대학 환경학및환경공학과)","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18025890290127329739"}}},"source":["plt.plot(hist.history['loss'], label='train')\n","plt.plot(hist.history['val_loss'], label='validation')\n","plt.title('Loss Trend')\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(loc='best')\n","plt.grid()\n","plt.show()"],"execution_count":63,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"FIhDr-BmJjen"},"source":["best_model = tf.keras.models.load_model('./GTSRB_Native_Colab.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4uqfzd-qJxdX","outputId":"92500989-8d13-4365-974a-c67dcc0405c4"},"source":["best_model.evaluate(x_test, y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["245/245 [==============================] - 1s 5ms/step - loss: 0.0191 - accuracy: 0.9966\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.01913665048778057, 0.9965512752532959]"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4u9Y23Hd7EQW","outputId":"864b547a-21a5-4a38-d5e5-f63b749a03da"},"source":["y_pred = model.predict(x_test)\n","\n","print(y_pred.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(7829, 43)\n"]}]},{"cell_type":"code","metadata":{"id":"PByUMR0n0Z8B"},"source":[""],"execution_count":null,"outputs":[]}]}